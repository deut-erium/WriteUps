from collections import Counter
from itertools import zip_longest, combinations,cycle
import string
from math import exp

def xor(a,b):
    if len(a)<len(b):
        a,b = b,a
    return bytes([i^j for i,j in zip(a,cycle(b))])


bigram = """
5.81 7.50 8.08 7.52 8.21 6.69 7.40 7.90 8.16 6.68 6.24 8.53 8.17 8.34 6.05 8.79 1.39 8.57 7.92 8.49 6.07 6.60 7.97 5.21 5.77 6.13 5.55 9.51 8.44 9.08 6.20 8.99 8.06 5.74 8.03 3.40 5.99 9.83 10.2 10.2 3.22 8.52 5.44 9.60 9.67 9.25 8.67 8.27 6.67 4.49 5.71 6.61
7.40 6.12 7.12 4.33 5.93 3.09 3.53 4.60 6.08 2.83 2.48 6.05 6.11 6.73 6.42 4.96 1.79 6.02 5.54 5.65 6.63 1.10 3.58 0.00 2.83 3.14 9.95 4.54 4.69 4.91 9.87 4.69 4.55 4.73 9.04 4.39 3.69 8.60 0.00 3.66 9.79 0.00 0.00 10.1 0.00 1.61 10.8 0.00 0.00 1.10 8.12 1.10
7.70 7.34 6.01 5.51 7.76 5.53 3.53 3.22 8.46 1.79 3.22 5.04 5.88 7.71 6.88 5.91 0.00 6.71 7.33 7.46 6.75 4.49 4.03 3.61 6.32 0.00 10.4 0.00 0.00 0.00 8.88 0.00 0.00 10.2 9.30 0.00 0.00 9.43 0.00 0.00 11.3 6.79 0.00 8.94 3.89 3.22 8.71 0.00 2.56 0.00 6.41 6.53
7.48 4.95 6.25 6.12 8.02 4.49 3.00 4.28 8.11 0.00 3.04 7.02 4.44 8.94 6.69 2.71 0.00 7.34 5.16 3.53 6.59 1.61 3.18 2.08 3.81 1.95 9.89 0.00 1.39 0.00 10.5 0.00 0.00 3.99 9.43 3.74 0.00 2.71 4.19 2.40 9.33 0.00 0.00 9.39 3.00 0.00 8.59 4.39 5.76 0.00 6.12 3.97
6.06 7.52 7.95 8.42 7.26 7.06 7.98 8.47 7.85 6.40 7.38 8.59 8.37 9.15 5.58 7.66 3.14 9.39 8.41 9.01 6.75 7.92 7.07 5.06 5.97 5.73 9.01 4.78 7.19 8.76 2.56 5.65 6.57 4.77 7.13 2.08 4.33 8.69 7.68 8.94 1.79 6.09 6.17 7.51 7.47 6.40 8.51 8.58 6.28 8.53 5.44 4.16
6.27 1.10 5.20 4.09 6.60 6.49 3.47 3.50 6.52 3.22 3.69 5.37 3.97 5.96 7.70 2.48 0.00 5.52 4.56 4.64 4.83 4.34 3.04 0.69 2.20 0.00 8.89 0.00 0.00 1.10 9.88 1.10 0.00 2.40 9.29 4.30 0.00 8.80 0.00 0.00 9.81 0.00 0.00 9.89 0.00 3.00 8.01 0.00 0.00 0.00 2.71 0.00
7.16 2.71 3.64 6.26 6.84 3.33 4.55 1.95 7.21 0.00 1.95 5.18 5.23 8.61 6.36 5.51 0.00 6.92 4.38 3.66 6.47 2.08 3.37 0.00 2.40 1.79 9.28 0.00 0.00 3.26 9.72 1.10 0.00 6.01 8.40 2.08 0.00 7.66 1.95 2.48 9.94 4.29 0.00 9.53 1.39 0.00 8.47 0.00 4.58 0.00 4.88 0.00
5.56 3.14 8.14 3.74 4.96 2.48 6.68 3.40 3.18 0.69 4.65 3.89 3.04 5.34 6.17 6.87 0.00 4.65 8.00 8.63 3.30 3.33 6.34 2.77 1.39 3.22 10.1 0.00 0.00 0.00 10.5 0.00 0.00 0.00 9.46 1.39 0.00 4.56 2.64 0.00 10.0 0.00 0.00 4.13 3.18 0.00 8.64 1.79 3.18 0.00 6.38 1.95
8.18 7.03 7.99 7.81 6.50 7.13 6.84 8.28 7.50 4.90 6.75 8.32 7.94 8.11 6.01 6.82 2.56 8.48 7.93 8.96 6.21 7.84 7.02 8.39 4.47 4.79 6.18 5.12 6.05 6.34 2.71 8.90 5.34 1.10 2.08 0.69 3.95 7.71 7.34 10.9 6.76 3.30 3.00 8.62 9.43 10.1 1.95 6.38 3.18 1.39 0.69 4.52
3.99 3.66 0.69 2.56 3.40 0.00 0.69 0.00 4.67 0.00 0.00 1.39 2.08 5.69 3.26 0.00 0.00 3.99 0.69 3.09 3.00 0.00 0.00 0.69 0.00 0.00 10.2 0.00 0.00 0.00 9.33 0.00 0.00 3.58 7.57 0.00 0.00 0.00 0.00 0.00 9.76 0.00 0.00 7.67 0.00 0.00 9.25 0.00 0.00 0.00 1.95 0.00
6.33 1.79 7.24 3.71 5.29 3.47 2.89 3.69 5.68 0.00 3.30 5.31 1.61 6.15 6.65 2.30 0.00 7.70 6.00 3.61 5.38 3.33 3.66 0.00 2.64 2.20 8.84 2.94 3.37 3.71 9.10 4.28 4.42 6.70 8.66 3.33 0.00 7.49 2.30 7.80 8.41 0.00 0.00 7.74 1.10 1.10 7.74 2.56 4.36 0.00 5.90 0.69
8.81 6.88 6.50 5.85 8.34 5.93 5.61 5.36 8.07 1.10 5.83 8.01 3.26 4.39 8.01 6.97 0.00 6.67 6.77 6.35 6.72 3.00 4.28 1.79 5.16 3.50 9.82 0.00 0.00 0.00 9.71 0.00 0.00 1.10 9.52 3.22 0.00 6.02 0.00 0.69 9.64 0.00 0.00 0.00 2.64 6.35 8.10 3.00 0.00 0.00 7.36 0.00
8.01 5.18 3.81 5.02 7.28 4.89 5.21 4.73 7.33 2.94 3.99 5.54 6.52 5.98 8.78 4.57 1.39 7.07 5.84 5.49 7.05 2.40 3.93 1.39 5.46 2.56 11.0 2.20 8.68 6.05 9.76 3.00 3.26 2.20 10.1 0.00 3.83 1.95 3.37 2.64 10.1 0.00 0.00 11.2 9.03 3.22 8.91 0.00 1.95 0.00 7.92 0.00
9.74 3.50 5.34 5.49 8.83 2.20 6.15 6.16 9.39 0.00 4.76 3.61 6.20 7.14 9.47 4.49 0.69 7.36 5.18 5.56 8.08 1.10 6.01 0.00 5.74 0.10 9.60 4.41 5.06 5.30 10.9 5.11 5.09 3.97 8.57 1.61 0.00 0.00 1.39 0.00 10.0 0.00 0.00 2.20 0.00 2.48 7.04 1.61 2.20 0.00 5.68 0.00
3.83 7.50 9.10 7.23 6.62 7.60 7.30 7.71 8.62 6.63 5.75 7.75 7.71 7.40 7.12 8.69 0.00 8.29 7.61 8.55 4.16 5.78 6.66 3.58 7.58 4.22 6.25 6.52 7.85 5.83 3.83 8.34 5.26 7.04 6.05 3.09 6.45 8.54 5.63 9.34 3.83 7.94 1.10 8.57 7.09 7.87 7.67 7.14 6.30 5.61 4.98 5.16
7.98 3.95 4.25 3.30 8.61 2.56 3.00 3.37 6.25 1.39 3.50 5.93 8.56 3.50 6.97 5.80 0.00 5.66 6.84 3.85 5.95 2.20 4.26 4.66 3.66 1.95 10.2 0.00 0.00 0.69 9.68 5.23 2.56 9.47 8.61 0.00 0.69 8.54 0.00 1.79 9.34 1.95 0.00 10.2 5.52 3.64 8.28 1.10 4.39 0.69 5.29 0.00
4.96 0.00 3.64 1.95 3.43 0.00 2.77 2.30 3.74 0.00 0.69 0.00 0.00 3.40 1.79 0.00 0.00 2.40 3.71 0.00 1.79 0.00 2.20 0.00 2.48 0.69 5.25 4.14 4.68 4.82 5.00 4.82 4.57 4.60 4.30 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 8.27 8.47 0.00 2.40 0.00 0.00 0.00
8.76 7.12 6.91 6.61 9.20 7.08 7.07 5.69 7.38 5.20 5.13 3.74 4.86 3.83 9.39 0.51 0.00 6.59 6.42 7.94 7.69 2.08 4.50 2.08 5.37 1.10 9.19 3.95 4.16 4.93 10.3 4.73 3.99 6.70 9.26 0.00 0.00 1.10 0.00 0.00 9.97 0.00 0.00 0.00 1.10 1.79 9.13 0.00 1.39 1.79 6.74 2.56
8.50 7.30 6.55 7.98 9.11 4.62 5.83 4.62 9.08 1.61 6.36 7.05 6.37 8.27 7.62 6.15 2.40 7.82 7.79 8.79 8.50 3.69 5.68 1.39 7.40 1.95 10.0 2.71 9.36 0.00 10.8 1.39 5.33 10.1 9.21 0.69 7.05 7.47 7.96 6.40 10.1 8.98 7.06 5.06 0.69 10.8 9.61 5.19 7.85 0.00 8.11 4.74
9.09 3.81 7.39 4.36 7.91 5.65 7.40 6.20 8.71 0.00 3.89 6.95 5.30 8.46 7.95 5.82 4.09 8.78 8.92 7.30 7.37 2.30 4.25 4.56 10.2 3.93 8.94 4.23 4.81 0.00 9.32 0.00 0.00 12.0 9.57 0.00 2.48 1.79 0.00 0.00 9.71 0.00 0.00 9.24 7.98 0.00 8.75 1.95 7.88 1.61 7.54 2.64
6.95 7.26 6.69 6.50 5.56 5.56 6.30 6.18 4.63 5.68 4.37 6.88 6.49 5.24 7.88 6.53 6.22 7.13 7.04 6.67 1.10 2.08 2.71 3.50 5.33 3.85 1.39 3.87 3.71 4.17 3.33 2.83 4.13 4.04 1.39 2.20 7.04 6.09 4.61 10.2 1.10 7.21 0.00 6.53 6.70 6.44 0.69 0.00 3.87 0.00 0.00 4.99
6.92 0.69 1.61 4.51 6.85 0.00 1.39 2.83 6.91 3.40 2.20 5.47 1.79 5.68 7.17 1.10 3.56 5.62 4.44 7.32 3.00 0.69 2.30 5.20 2.20 1.39 8.57 0.00 0.00 0.00 8.21 0.00 0.00 0.00 9.16 0.69 0.00 5.70 0.00 0.69 7.61 0.00 0.00 4.62 1.95 4.89 4.79 0.00 0.00 0.00 4.14 0.00
6.21 4.09 1.79 4.88 7.87 1.39 2.64 3.69 2.30 2.71 2.71 4.58 4.19 5.83 7.22 2.83 3.30 4.89 5.28 5.02 3.40 1.39 3.81 1.39 3.89 1.39 9.86 0.00 0.00 0.00 10.2 0.00 0.00 9.92 9.70 0.00 3.30 2.71 0.69 0.00 9.09 0.00 0.00 6.80 2.77 5.12 5.23 0.00 0.00 0.00 6.38 0.00
5.76 2.94 3.22 3.14 8.57 0.00 1.10 0.00 5.11 2.94 0.69 2.40 2.64 4.62 4.60 1.61 2.20 1.95 4.75 3.83 3.71 2.71 1.79 5.06 1.39 0.00 4.93 0.00 0.00 0.00 4.83 0.00 0.00 1.39 4.68 0.00 0.00 0.00 0.00 0.00 2.40 0.00 0.00 0.00 0.69 0.69 2.20 0.00 0.00 0.69 2.30 0.00
7.13 5.49 5.27 5.18 6.79 2.71 5.11 5.10 3.26 0.69 5.78 6.68 5.58 10.4 5.63 3.53 0.69 7.14 5.56 7.60 3.89 3.04 3.87 1.95 1.10 2.56 8.09 1.61 0.00 0.00 8.59 0.00 0.00 0.00 6.83 0.00 0.00 2.40 0.00 1.95 10.4 3.40 0.00 7.75 3.00 1.10 7.25 5.09 0.00 0.00 0.00 3.33
5.70 1.79 3.58 2.77 4.71 0.00 0.69 0.00 5.96 0.00 0.00 2.20 0.69 4.58 4.32 1.95 1.95 3.53 1.79 4.83 3.89 0.00 0.00 0.00 2.56 4.11 6.95 2.48 0.00 3.33 6.86 0.00 0.00 5.56 6.75 0.00 0.00 0.69 2.40 0.00 5.92 0.00 0.00 0.69 2.71 0.00 5.80 4.38 4.22 0.00 3.43 0.00
0.00 4.09 3.40 0.00 0.00 4.83 3.81 0.00 0.00 0.00 0.00 0.69 3.89 0.00 0.00 3.93 1.39 3.40 3.04 2.20 0.00 3.50 0.69 0.00 0.00 1.95 7.38 11.5 12.2 12.1 9.25 10.6 11.6 9.03 12.4 9.03 11.0 13.1 11.9 13.8 7.79 11.4 7.95 13.3 13.0 13.5 11.1 11.6 10.5 9.64 12.0 9.23
0.00 0.00 0.00 0.00 0.00 0.00 0.00 1.39 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 11.4 9.00 6.57 6.50 12.4 3.85 3.56 5.33 10.9 8.14 3.56 11.5 6.93 5.61 11.5 5.25 0.00 10.6 10.2 8.52 11.3 7.05 6.57 0.00 11.4 2.71
5.27 3.76 7.47 7.00 5.89 3.74 6.55 4.77 4.91 0.00 6.24 5.93 5.62 5.86 0.00 4.65 3.40 4.38 3.93 2.94 0.00 4.78 2.83 0.00 0.00 0.00 12.4 4.08 10.4 5.76 12.7 3.00 0.69 12.5 11.7 1.10 11.4 11.1 4.89 4.90 12.8 3.76 7.87 11.2 9.47 12.1 11.2 1.95 3.00 0.69 9.93 5.82
0.00 3.30 1.10 0.00 2.71 0.00 0.00 0.00 1.39 0.00 0.00 0.00 0.00 0.00 0.00 2.94 0.00 0.00 2.77 0.00 0.00 0.00 0.00 0.00 0.00 0.00 11.6 7.33 7.73 10.1 12.8 7.46 9.83 7.55 12.2 7.54 5.46 9.76 9.44 9.16 11.4 6.09 6.83 10.7 11.0 7.30 11.0 9.31 8.73 0.00 9.98 5.09
1.79 5.43 5.12 2.30 0.00 4.06 4.48 2.64 0.00 2.56 3.18 5.24 4.62 2.71 0.00 4.63 0.00 3.66 3.95 1.61 0.00 4.33 4.25 0.00 0.00 1.79 12.8 10.2 12.4 13.3 12.2 11.2 11.0 9.36 11.3 7.58 9.97 12.4 12.0 13.4 10.6 11.4 9.52 13.9 13.4 12.3 9.23 11.6 11.5 11.3 11.4 8.43
0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 11.1 4.32 4.78 3.50 11.5 11.3 6.02 3.64 11.9 4.23 5.42 10.1 6.27 5.31 12.4 3.26 0.00 11.5 8.16 10.8 10.5 3.81 4.91 1.39 8.18 2.56
1.79 0.00 0.00 0.00 0.00 0.00 1.10 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 1.79 0.00 0.00 0.00 0.00 0.00 0.00 0.00 11.4 5.36 3.58 6.81 12.2 6.20 9.57 11.7 11.0 3.09 4.68 9.99 7.66 10.4 11.0 5.28 1.95 11.3 10.3 9.35 10.6 2.94 5.96 2.08 9.12 3.64
0.00 0.00 0.69 0.00 1.39 0.00 0.00 0.00 0.00 0.00 3.18 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 13.1 8.20 6.35 7.84 14.1 6.60 5.24 6.21 12.6 3.50 5.91 9.00 8.58 9.71 12.4 5.91 5.12 10.6 9.32 11.2 10.2 5.18 8.07 0.00 9.54 2.64
0.00 4.36 3.18 0.00 0.00 4.53 4.06 0.00 1.10 0.00 0.00 2.30 3.83 2.08 0.00 3.30 0.00 1.39 3.04 1.10 0.00 2.30 0.00 0.00 0.00 0.00 11.9 10.4 12.8 12.4 12.1 11.1 11.8 6.54 7.10 7.21 10.4 12.5 11.8 14.0 12.7 10.5 8.09 11.9 13.1 13.1 8.71 11.7 6.71 9.25 6.69 10.2
0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 8.52 1.61 3.43 3.56 9.39 2.08 0.00 1.10 7.24 2.30 3.76 2.40 3.93 3.37 10.0 1.61 0.00 1.39 2.30 2.56 10.1 0.69 0.00 0.00 1.39 1.79
4.92 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 1.10 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 9.21 6.78 4.55 6.64 11.9 6.73 6.35 7.68 11.0 3.85 6.42 9.22 6.53 9.80 8.42 6.30 0.00 8.04 10.5 6.95 7.46 5.42 7.05 0.00 8.70 2.56
0.00 2.20 1.79 0.00 0.00 1.10 1.39 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 4.29 0.00 0.00 0.69 0.00 0.00 0.00 0.00 12.5 8.60 8.44 11.9 12.9 10.0 7.95 7.18 12.7 4.22 9.54 12.7 9.68 7.78 12.0 9.50 3.43 8.53 11.3 10.9 10.9 9.58 8.49 3.40 12.1 6.25
0.00 0.00 1.39 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 12.3 10.7 5.82 5.65 12.8 7.59 4.80 5.64 12.0 3.56 4.30 7.21 10.8 7.95 12.0 11.8 1.39 5.81 10.6 5.84 10.7 4.43 4.88 0.00 9.84 2.89
2.48 1.79 1.39 1.10 0.00 4.29 0.00 1.10 0.69 0.00 0.00 0.00 0.00 0.00 1.79 0.00 0.00 1.61 0.69 0.69 0.00 0.00 1.61 0.00 0.00 0.00 12.0 8.42 12.2 13.3 12.8 10.2 13.2 9.07 12.1 8.40 10.5 10.1 9.81 10.9 12.1 7.93 7.36 8.38 12.4 13.1 10.7 10.3 8.30 7.55 11.1 7.75
3.00 1.61 2.08 0.00 1.10 0.00 1.79 5.43 0.00 1.61 1.61 0.00 2.30 0.00 0.00 0.00 0.00 0.69 3.33 1.61 0.00 0.00 1.10 0.00 0.00 0.00 10.5 10.6 11.2 11.3 9.82 13.0 10.6 9.43 10.8 8.47 10.6 12.1 12.6 13.6 11.7 11.7 6.27 13.4 11.9 12.2 12.9 11.5 12.0 8.62 9.85 8.30 
2.30 0.00 0.00 0.00 0.00 0.00 0.00 3.30 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 2.20 1.10 0.00 0.00 0.00 1.39 0.00 0.00 0.00 12.0 6.81 5.74 5.81 12.3 6.47 7.80 10.4 11.0 4.91 6.47 11.8 8.67 5.60 12.0 11.1 2.08 12.2 10.2 10.4 10.9 1.10 5.85 0.00 8.97 3.58 
0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 3.30 1.95 0.00 0.00 0.69 0.69 0.00 0.00 6.64 0.00 0.00 1.10 0.00 0.00 0.00 0.00 1.10 0.00 1.10 1.95 10.9 1.79 0.69 0.00 0.00 0.00 
0.00 0.69 4.42 0.00 0.00 0.00 0.69 0.00 0.00 0.00 0.00 0.00 1.39 0.69 0.00 0.69 0.00 0.00 4.01 0.00 0.00 0.00 0.00 0.00 0.00 0.00 12.8 9.63 11.2 11.6 13.7 9.61 11.0 8.83 12.7 5.58 11.4 10.8 11.3 11.5 12.8 10.1 6.18 11.0 12.5 12.2 11.0 11.0 8.79 5.47 11.6 6.92 
1.95 2.89 2.89 0.00 0.00 1.10 0.00 0.69 0.00 0.00 0.00 0.69 3.14 0.00 0.69 0.69 0.00 0.69 2.48 1.61 0.00 0.00 2.89 0.00 0.00 0.00 12.1 8.59 11.1 9.10 12.9 8.62 6.66 12.0 12.5 4.16 10.2 10.4 10.1 9.18 12.0 11.3 8.25 8.72 12.2 13.2 11.7 6.44 9.15 0.00 9.75 5.97 
3.33 0.00 0.69 0.00 0.00 3.53 0.00 0.00 0.00 0.00 0.00 1.95 0.69 3.26 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 3.78 0.00 0.00 0.00 12.5 8.43 9.81 7.32 13.3 8.08 7.71 14.2 13.2 4.17 6.14 10.7 9.83 8.95 13.2 7.33 1.95 12.2 12.2 11.4 11.4 6.49 10.5 2.83 11.5 8.49 
0.00 3.93 2.89 1.10 0.00 0.69 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 3.50 0.00 0.00 0.00 0.69 0.00 0.69 0.00 0.00 0.00 0.00 10.9 10.8 11.3 10.9 11.2 9.19 11.1 6.29 10.8 5.98 8.08 11.9 11.0 12.1 8.53 11.2 5.73 12.3 12.3 12.4 5.42 7.31 6.43 7.56 8.94 7.43 
0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 10.8 0.00 6.05 4.20 12.9 0.00 4.52 1.39 12.0 0.69 3.18 5.15 2.40 5.34 10.4 0.00 0.00 6.23 6.43 3.71 6.76 4.74 0.00 0.00 8.11 1.10 
0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 12.1 6.89 6.09 7.88 11.8 6.22 3.71 12.0 12.1 0.00 7.07 8.85 7.31 10.7 11.7 5.53 1.95 9.53 10.0 7.87 4.69 0.69 2.94 0.00 8.43 2.20 
0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 9.11 3.78 9.11 0.00 9.61 5.59 1.10 7.76 9.11 0.00 0.00 5.06 4.39 2.94 7.47 10.3 4.76 1.39 4.55 9.75 7.96 4.62 6.11 5.06 6.00 0.00 
0.00 0.00 2.20 0.00 0.00 0.00 0.69 0.00 0.69 0.00 0.00 0.00 0.69 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 9.16 8.22 8.48 7.77 11.4 6.35 6.34 6.24 9.92 3.09 5.96 9.07 9.49 9.11 10.6 8.63 1.61 8.97 10.7 8.86 6.57 5.64 8.04 4.42 3.43 6.56
0.00 0.00 0.00 0.00 0.00 0.00 1.79 0.00 0.00 0.00 1.79 0.00 0.00 0.00 0.00 1.39 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 9.41 5.86 3.69 4.73 10.1 2.56 5.00 6.32 8.93 0.69 5.29 6.95 6.00 4.67 8.13 4.98 3.14 4.75 4.98 4.84 6.85 4.84 5.21 0.00 7.23 8.10
"""

chars = string.ascii_uppercase+string.ascii_lowercase

bigram_freq = Counter()

for succ,line in zip(chars,bigram.strip().split('\n')):
    for pred,val in zip(chars,map(lambda x: round(exp(float(x))),line.split())):
        bigram_freq[succ+pred] = val

bigram_case_insensitive = Counter()
for i in chars:
    for j in chars:
        bigram_case_insensitive[(i+j).lower()]=bigram_freq[i+j]

FREQ_DIST = Counter({
    'a': 0.0651738,
    'b': 0.0124248,
    'c': 0.0217339,
    'd': 0.0349835,
    'e': 0.1041442,
    'f': 0.0197881,
    'g': 0.0158610,
    'h': 0.0492888,
    'i': 0.0558094,
    'j': 0.0009033,
    'k': 0.0050529,
    'l': 0.0331490,
    'm': 0.0202124,
    'n': 0.0564513,
    'o': 0.0596302,
    'p': 0.0137645,
    'q': 0.0008606,
    'r': 0.0497563,
    's': 0.0515760,
    't': 0.0729357,
    'u': 0.0225134,
    'v': 0.0082903,
    'w': 0.0171272,
    'x': 0.0013692,
    'y': 0.0145984,
    'z': 0.0007836,
    ' ': 0.1918182 
})

sum_bigram = sum(bigram_freq.values())/(len(bigram_freq))

n_grams_eng = [
    {i:v*sum_bigram for i,v in FREQ_DIST.items()},
    bigram_freq
]


def score(text):
    score = 0
    n_grams_text = [  [i for i in Counter(text[i:i+n] for i in range(len(text)-n+1)).most_common()]  for n in range(1,3) ]
    for i in range(2):
        for x,v in n_grams_text[i]:
            try:
                score+=n_grams_eng[i][x]*v
            except KeyError:
                continue
    return score



#for _ in range(100):
#    key = bytes([random.randint(0,255)])
#    ct = xor(key,sample.encode())
#
#    scores = {}
#    for i in range(256):
#        scores[i] = score(xor(bytes([i]),ct).decode('latin1') )
#    c = Counter(scores).most_common()
#    pred = c[0][0]
#    nex = c[1][0]
#    print(key[0]==pred,(c[0][1]-c[1][1])/c[1][1],key,pred^nex)
#


