from collections import Counter
from Crypto.Util.number import *
import sys
import random
import sympy
flag = open('flag.txt','rb').read()
print("Loading... this may take a while.")
BITS = 512
p,q = getPrime(BITS),getPrime(BITS)
#p = 1020960229324112489642066668245928114133502853965716925849576555898095814399465036589292312663009132181559853953088528151252313728263780652965417586702297298203841858900732778484845872335739392384936073671519951508857656607357836489189633812884377631899770412166026889734811309046151978397149016799546704862313213469058212952444594701816796335900317397257696213536858622998883275457097768077751046155008747638487082997037015619433563678603117133290569617490737483581473272839429814616347974884718582238900948376656089348315595223414084613961264792171301677494947913821199314081231907122007249644348816034916296305865851739909166741414696139571543378292218120986342074708218319473746075997456269548348730061380850682369561383333805996494583718848614945381236360314431745436740594468367353871045842327820428160551405669410709948237232660140037284670366829906491375131128663167900843683300735832992505959490611762584933270331372755337235980578098729307985575078508605234586455348245328761740349360876822023093811833228231422288067918827761350091121674733990561799300980787667320187477372719402306444827411079442943653079099118661344628867754255495231860983798701612451584634400840982121417142942688328537116408823443029209325382080599281
#q = 772036336364037807227996376019545868893488228614768085627350392655363046534946262975330953066448266416993247829898344962093084809167526114879699361381226090667708961173688265849433299528277509470857900259380078256560926069686030010451631011464341305591887402412421501672629273825650820459301923985665164751796886272750612438858039399813479517800064585922241859853455046734887864802324015859226381941395033364903126658836085085426928945224228322138088674513611367797449404414149834686036121291003849186588097655235602230112657133622207882380290826261310631226367284713636103792115617946282895703487186181664981346832545683212313373595650806584526343423396872493008427753274127631493271586280910100446346703463485561767028900194518227676706208700813703068097381814399192979602785115957449804091597555895390531986761772929440918895470912756633395706027947813236149808149903479944687261991047530646382330413587656348131935757641511143056497977194807604284619745928861052657416754461243104462156372681746355569048037215112384818728782869790590394524957700310630557700833110336844738549004696072637392722693760480661854217589687090771987516313672569658341159693706091737984229248383978765687227262875427880638449332334955642664800371699059
e = 0x10001
n = p*q
m = random.randrange(0,n)
c = pow(m,e,n)
d = sympy.mod_inverse(e,(p-1)*(q-1))
def menu(guesses):
    print()
    print("1. Source")
    print("2. Public key")
    print("3. Decrypt")
    print("4. Play")
    print("\nYou have "+str(guesses)+" guesses left.")
    choice = input(": ").strip()
    if choice=="1":
        f = open(__file__)
        print()
        print(f.read())
        print()
        menu(guesses)
    elif choice=="2":
        print("\nn = "+str(n))
        print("e = 65537")
        menu(guesses)
    elif choice=="3":
        d_ = int(input("What is the private key?\n: "))
        if (pow(c,d_,n)==m):
            print("Congrats! Here is your flag:")
            print(flag)
            sys.exit()
        else:
            print("\nSorry, that is incorrect.")
            menu(guesses)
    elif choice=="4":
        if guesses==0:
            print("Sorry, you have no more guesses.")
            menu(0)
        else:
            if guesses>8:
                code = list(hex(p)[2:])
            else:
                code = list(hex(q)[2:])
            guess = input("Make a guess.\n: ")
            while len(guess)!=(BITS//4):
                guess = input("Try again.\n: ")
            guess = list(guess)
            a = "".join(["1" if guess[i]==code[i] else "0" for i in range(BITS//4)])
            print(a)
            guesses-=1
            menu(guesses)
    else:
        print("That is not a valid choice.")
        menu(guesses)
while 1:
    menu(16)
