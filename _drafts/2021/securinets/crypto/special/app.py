from Crypto.Util.number import isPrime, bytes_to_long
from secret import flag
import random

def get(r):
	while True:
		a = random.getrandbits(512)
		p = a**2 + r 
		if isPrime(p) :
			return p

m = bytes_to_long(flag)
e = 65537
p, q = get(1337), get(1187)
n = p*q
c = pow(m, e, n)
print ("Modulus : {}".format(n))
print ("Public exponent : {}".format(e))
print ("Ciphertext : {}".format(c))

"""

Modulus : 9205101698706979739826801043045342787573860852370120009782047065091267165813818945944938567077767109795693195306758124184300669243481673570359620772491153042678478312809811432352262322016591328649959068333993409371541201650938826630256112619578125044564261211415732174900162604077497313177347706230511508892968172603494805342653386527679619380762253476920434736431368696225307809325876263469267138456334317623292049963916185087736277032965175422891773251267119088153064627668031982940139865703040003065759250189294830016815658342491949959721771171008624698225901660128808998889116825507743256985320474353400908203
Public exponent : 65537
Ciphertext : 7936922632477179427776336441674861485950589109838466370248848810603305227730610589646741819313897162184198914593449584513298801516246072184328924490958302064664202813944180474377318619755541891685799909623945111729243482919086734358170659346187530089396234296268433976153029353575494866263288471212406042845186256151549768916089844077364464961133610687655801313809083988904726871667971720011220619598069236604397523051054337851497256894302257378216064087800301371122182309897203436049352850483968349573626245496903689129366737214112517774597434631637719018819317503710042658242522690613437843118568709251604555104

"""