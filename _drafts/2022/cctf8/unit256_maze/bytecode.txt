def storage:
  unknown27bf2522 is uint256 at storage 0
  result is uint256 at storage 1
  num is uint256 at storage 2
  unknown36987b79 is uint256 at storage 3
  unknown060b4912 is uint256 at storage 4
  unknown1be54a37 is uint256 at storage 5
  unknownc75b5069 is uint256 at storage 6
  unknown49bb330f is uint256 at storage 7
  unknownbc3377d9 is uint256 at storage 8
  unknownc380d980 is uint256 at storage 9
  unknownc0615d6dAddress is addr at storage 10

def unknown060b4912() payable:
  return unknown060b4912

def unknown1be54a37() payable:
  return unknown1be54a37

def unknown27bf2522() payable:
  return unknown27bf2522

def unknown36987b79() payable:
  return unknown36987b79

def unknown49bb330f() payable:
  return unknown49bb330f

def num() payable:
  return num

def unknownbc3377d9() payable:
  return unknownbc3377d9

def unknownc0615d6d() payable:
  return unknownc0615d6dAddress

def unknownc380d980() payable:
  return unknownc380d980

def c() payable:
  return result

def unknownc75b5069() payable:
  return unknownc75b5069

def getResult() payable:
  return result

#
#  Regular functions
#

def _fallback() payable: # default function
  revert

def unknownf2626325(uint256 _param1) payable:
  require calldata.size - 4 >=ΓÇ▓ 32
  require _param1 == _param1
  num = 9
  return num

def unknown2b4e9638(uint256 _param1) payable:
  require calldata.size - 4 >=ΓÇ▓ 32
  require _param1 == bool(_param1)
  require unknownbc3377d9 == 2
  return 9001

def unknown16bc9b3c() payable:
  require unknownc380d980 == 3
  if unknown060b4912 > -4097:
      revert with 'NH{q', 17
  unknown1be54a37 = unknown060b4912 + 4096
  return unknown1be54a37

def sub(uint256 _a, uint256 _b) payable:
  require calldata.size - 4 >=ΓÇ▓ 64
  require _a == _a
  require _b == _b
  if _a < _b:
      revert with 'NH{q', 17
  result = _a - _b

def add(uint256 _a, uint256 _b) payable:
  require calldata.size - 4 >=ΓÇ▓ 64
  require _a == _a
  require _b == _b
  if _a > -_b - 1:
      revert with 'NH{q', 17
  result = _a + _b

def mul(uint256 _a, uint256 _b) payable:
  require calldata.size - 4 >=ΓÇ▓ 64
  require _a == _a
  require _b == _b
  if _a and _b > -1 / _a:
      revert with 'NH{q', 17
  result = _a * _b

def unknownd6b8e4b3(uint256 _param1) payable:
  require calldata.size - 4 >=ΓÇ▓ 32
  require _param1 == addr(_param1)
  require unknownbc3377d9 == 2
  if not addr(_param1) - unknownc0615d6dAddress:
      unknownc380d980 = 3
  return 3

def div(uint256 _a, uint256 _b) payable:
  require calldata.size - 4 >=ΓÇ▓ 64
  require _a == _a
  require _b == _b
  if _b <= 0:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The second parameter should be larger than 0'
  if not _b:
      revert with 'NH{q', 18
  result = _a / _b

def unknownf33030f7() payable:
  require unknown27bf2522 == 5 * 10^10
  unknownbc3377d9 = 2
  require unknownbc3377d9 == 2
  unknownc75b5069 = 9001
  if unknown36987b79 > -unknownc75b5069 - 1:
      revert with 'NH{q', 17
  unknown060b4912 = unknown36987b79 + unknownc75b5069
  unknownc0615d6dAddress = 0x5b38da6a701c568545dcfcb03fcb875f56beddc4
  return unknown060b4912

def enter(uint256 _kitty) payable:
  require calldata.size - 4 >=ΓÇ▓ 32
  require _kitty == _kitty
  unknown27bf2522 = 9
  if not _kitty - 123:
      unknown36987b79 = 6845
      unknown49bb330f = 1
      require unknown49bb330f == 1
      unknown27bf2522 = 5 * 10^10
      if unknown36987b79 > -9276917453894:
          revert with 'NH{q', 17
      unknown36987b79 += 9276917453893
  require unknown49bb330f == 1
  unknown27bf2522 = 5 * 10^10
  if unknown36987b79 > -9276917453894:
      revert with 'NH{q', 17
  unknown36987b79 += 9276917453893
  return 0



