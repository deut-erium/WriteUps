ct=395194141435798550648329991848070349794798252798746662068420749813369750665268883328843534931437426604892501825443389293531999192771985389445783436704907163312563472384752682053250203351326257696477475967990212557213272050830469205670120009162392873243583672881310036848670950831883559284726562547765550581194610835498039358881918099619956927087874453889001872936895771655628760855149241855640717633624310754162512198418433745346222950641365701261648007742316410514254012415660841961114292422789121483906818233279411139978985409393981277942431505058710241041938902842874046094174290925898336452210117254242693927316359020576939861396812864714127511336880923297828788415282943403148615796109782889565170421164017531829313843341509921374116414318738786074179710597338708141142185799693445351627074184891898301303416152503497721063955188198697521258912685373610854469344229084807360449713447019289445943695248010394837114531692
n=2337785490672139591349117734107848684372806761135825760241612019435125716440395391949934723783356677122561045664341548404198285715994483863841789812222752603086589531950737784993753795720933325149882861815308675621540895195019023615401123477713312993050954033266644851064437508980916850789425040351584900889623497593918974218810237816070883150369080731069136107001860551615628215414493399051220082191103221330746778278679296908181335228283879199064420195765743112243406871506787766798298319411415659603149888246472935828722463149693826513887346742796159106878811774942771543354957111505380264481584560297614379712366341484529998868512963928909708681518233976397976780562156616517247566201610270672346335823236751450520857153859226581785593681412902096573843026194279879056985706349965721832273903477779734156619958818563350192628275840370447100564249852067580119184151615445572679340304244557840598198250944249825555571887891
x=15658988505270327788660779458629481794724894505252859561908392350725280253678990785639557748532122962472760234904131849391897637791888572878822746568183249061450058716532096453122737460277044669245197773987367308797393325097360704288408662956396200001871777772420168353707197462767426119968371288391359010790577356877739554578945459
p=139082012823524473877797519777469875682906314433764228009518904896443717398510199346793255059371883147243332287692688002630819129094558982355172451689916174179394233450984119273587474971824120873949671150163347543520081962613673739215429338080501449423260643614294552555285624864887279198481359762809228495483
gp = 112588164259165441554473
qr = n//p
m = pow(ct%p, pow(65537, -1, p-1), p)

assert pow(m, 65537, n)==ct
print(m.to_bytes((m.bit_length()+7)//8,'big'))
