from gmpy2 import gcdext, is_prime

e = 0x10001

ct = 0x45357160eefa4b9d80e6b621788b24d213f5cda7a6660a0d8473bd92c20e853a0a48c6ee28f444efcd3df8f905f3009aec88b3265da785e6cd1b5c1b892eaa92463837266a2f14342fa2ec15578ee063026071030f587c56468b9e97f844c3e0bdf67cec6156332b0c58a6470b0501b297150976a106e3d8c786b8f093fca39994b6c112a32d93f181d90afadb6cd002df5bba2cd8321ccc272c8cb6bb87cbbe4f3143eeb20bd3cb291d47dab96375d533a2bfc51ed8c91d37272d6fb4b657f47c6ac29b50a7b3879fd15449a36c867b50d99ca5d2104bbd87c856cab2b696fb745f293d94668128f4bd2c1e7e0f94e707bae3719aa4a9f83db2d0b19dbf2007cfcc1ce561d74e59e900170d0c18caf662812e6a91adb151120dccda39d4c1e5ae49af473ea6d5d66595d3b0813cc3a4625eee34b53478d85f9bedbaea72be910bf4ff6fdc54a9eced5b068126a956aa1e477fbe48db5e4d5aa4bea6899af0f0b48e28f73d6416403e487d6fa64c04764358bceae4ea5f913a9f83df16b96bbb4a1d3805b69648309e551f36f66def7d9192b91871e056abd08dab12a999a0b8ade94b615f3daeadac167b7225c575e1dab75935f018108cd12f65d5014d8be218be207ea0729f0d654a3b192616e62c5ccdf505c4418f2d9cd77848ce8f3b354ba66d3d8c7a6ca06e8b4f7e3901b365f3547e9b00bbe6c154009acb560d1a9c

#dp=d%(p-1)

dp = 0x1239b43e9757bfeb45404678d158b587a0b4e815dace9ec22e0ca460e1640fc0cff8e32b1c3674ffda73803ef43521ef3ac426d9a8ff7ecfda81ae37c47c20bbc1fcc6a3d30642c3d7afc76974ff1c6c169cc70ef5bd3bc2d2854288efa6186dc3a3d71eeb63de905ccb0c8ad457d6929d00fcca693b087e27d1dd99a59b806886d3a270034b96f6442646b9d3ced76326cff8bdd9e88baecb06638fa7ef34acf7e3c1a522402b4570358126f9c515cf0c8a2df0717ffda5527e95ec277ceffb209046d916cb81395072f681a7d15103b38d3fb1f19ad544c32f1a090684eabd65cb52966a9efcb6ee970c2eccec162d41ef84003f30fdc00a75f0bc196f5ed5

#dq=d%(q-1)

dq = 0x2c4665456a6178f5311b5ff4d20ce7ef586f74747896a1fac53b4acc1a21079312e65706c4f157c2f57d2a09dfad2b53587939e380afd8fdbc217e3101863840b50f84e02c97ee9da79afc49833972a5ea7985a617c571de458604f7c0205eb6d8c19f8849ce704400ed8abb573841523c7c1bff4ff50330645afdd789bfdf15960c37b0e4a72f7b8ca8e72a898b9787734252730fae414474473d601b5e86967f007de499e510d1623886ce2a8e4d0e2a9a952aba4b74b07105ee9cd96a6386c2c652f42f5e767edfc2259afcbf231c33614fca6aa60157047edee81182543b21d9a0a4fd638403dcde194f1c70d369667e445ed769a0f438f0891c65ea6f19


# m^e = ct
# m^(e*dp) = 

# d = dp*Q + dp*P
# ed = kP*Q+1
# ed = edp*Q + edp*P = KPQ + 1
# ed-1 %P = edp
# ed-1 %Q = edq
dp1 = dp*e - 1
dq1 = dq*e - 1
for d in range(3,e):
    if dp1%d==0:
        p = dp1//d+1
        if is_prime(p):
            break
for d in range(3,e):
    if dq1%d==0:
        q = dq1//d+1
        if is_prime(q):
            break

d = pow(e, -1 , (p-1)*(q-1))
m = pow(ct, d, p*q)
print(m.to_bytes((m.bit_length()+7)//8,'big'))
